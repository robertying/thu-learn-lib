"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractJSONPResult = exports.JSONP_EXTRACTOR_NAME = exports.mapGradeToLevel = exports.trimAndDefine = exports.decodeHTML = exports.parseSemesterType = void 0;
const entities_1 = require("entities");
const types_1 = require("./types");
function parseSemesterType(n) {
    if (n === 1) {
        return types_1.SemesterType.FALL;
    }
    else if (n === 2) {
        return types_1.SemesterType.SPRING;
    }
    else if (n === 3) {
        return types_1.SemesterType.SUMMER;
    }
    else {
        return types_1.SemesterType.UNKNOWN;
    }
}
exports.parseSemesterType = parseSemesterType;
function decodeHTML(html) {
    const text = (0, entities_1.decodeHTML)(html);
    // remove strange prefixes returned by web learning
    return text.startsWith("\xC2\x9E\xC3\xA9\x65")
        ? text.substr(5)
        : text.startsWith("\x9E\xE9\x65")
            ? text.substr(3)
            : text.startsWith("\xE9\x65")
                ? text.substr(2)
                : text;
}
exports.decodeHTML = decodeHTML;
function trimAndDefine(text) {
    if (text === undefined || text === null) {
        return undefined;
    }
    const trimmed = text.trim();
    return trimmed === "" ? undefined : decodeHTML(trimmed);
}
exports.trimAndDefine = trimAndDefine;
const GRADE_LEVEL_MAP = new Map([
    [-100, "已阅"],
    [-99, "A+"],
    [-98, "A"],
    [-92, "A-"],
    [-87, "B+"],
    [-85, "优秀"],
    [-82, "B"],
    [-78, "B-"],
    [-74, "C+"],
    [-71, "C"],
    [-68, "C-"],
    [-67, "G"],
    [-66, "D+"],
    [-64, "D"],
    [-65, "免课"],
    [-63, "P"],
    [-62, "EX"],
    [-61, "免修"],
    [-60, "通过"],
    [-59, "不通过"],
    [-55, "W"],
    [-51, "I"],
    [-50, "缓考"],
    [-31, "NA"],
    [-30, "F"],
]);
function mapGradeToLevel(grade) {
    if (grade !== null && GRADE_LEVEL_MAP.has(grade)) {
        return GRADE_LEVEL_MAP.get(grade);
    }
    else {
        return undefined;
    }
}
exports.mapGradeToLevel = mapGradeToLevel;
exports.JSONP_EXTRACTOR_NAME = "thu_learn_lib_jsonp_extractor";
function extractJSONPResult(jsonp) {
    // check jsonp format
    if (!jsonp.startsWith(exports.JSONP_EXTRACTOR_NAME)) {
        throw types_1.FailReason.INVALID_RESPONSE;
    }
    // evaluate the result
    return Function(`"use strict";const ${exports.JSONP_EXTRACTOR_NAME}=(s)=>s;return ${jsonp};`)();
}
exports.extractJSONPResult = extractJSONPResult;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQXFEO0FBRXJELG1DQUFtRDtBQUVuRCxTQUFnQixpQkFBaUIsQ0FBQyxDQUFTO0lBQ3pDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUNYLE9BQU8sb0JBQVksQ0FBQyxJQUFJLENBQUM7S0FDMUI7U0FBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDbEIsT0FBTyxvQkFBWSxDQUFDLE1BQU0sQ0FBQztLQUM1QjtTQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUNsQixPQUFPLG9CQUFZLENBQUMsTUFBTSxDQUFDO0tBQzVCO1NBQU07UUFDTCxPQUFPLG9CQUFZLENBQUMsT0FBTyxDQUFDO0tBQzdCO0FBQ0gsQ0FBQztBQVZELDhDQVVDO0FBRUQsU0FBZ0IsVUFBVSxDQUFDLElBQVk7SUFDckMsTUFBTSxJQUFJLEdBQUcsSUFBQSxxQkFBVyxFQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLG1EQUFtRDtJQUNuRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsc0JBQXNCLENBQUM7UUFDNUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQztZQUNqQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDaEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDO2dCQUM3QixDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDWCxDQUFDO0FBVkQsZ0NBVUM7QUFFRCxTQUFnQixhQUFhLENBQzNCLElBQStCO0lBRS9CLElBQUksSUFBSSxLQUFLLFNBQVMsSUFBSSxJQUFJ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